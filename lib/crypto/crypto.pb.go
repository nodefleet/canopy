// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: crypto.proto

package crypto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *****************************************************************************************************
// This file is auto-generated from source files in `/lib/.proto/*` using Protocol Buffers (protobuf)
//
// Protobuf is a language-neutral, platform-neutral serialization format. It allows users
// to define objects in a way thatâ€™s both efficient to store and fast to transmit over the network.
// These definitions are compiled into code that *enables different systems and programming languages
// to communicate in a byte-perfect manner*
//
// To update these structures, make changes to the source .proto files, then recompile
// to regenerate this file.
// These auto-generated files are easily recognized by checking for a `.pb.go` ending
// *****************************************************************************************************
// _
// _
// _
// ProtoAddress is a wrapper around address bytes enabling protobuf encoding and decoding
type ProtoAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// address: the shorter version of a public key
	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoAddress) Reset() {
	*x = ProtoAddress{}
	mi := &file_crypto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAddress) ProtoMessage() {}

func (x *ProtoAddress) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAddress.ProtoReflect.Descriptor instead.
func (*ProtoAddress) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoAddress) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

// A repeated list of addresses in proto format
type ProtoAddresses struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// addresses: a list of shorter versions of a public key
	Addresses     [][]byte `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoAddresses) Reset() {
	*x = ProtoAddresses{}
	mi := &file_crypto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoAddresses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAddresses) ProtoMessage() {}

func (x *ProtoAddresses) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAddresses.ProtoReflect.Descriptor instead.
func (*ProtoAddresses) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoAddresses) GetAddresses() [][]byte {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// ProtoPubKey is a wrapper around public key bytes enabling protobuf encoding and decoding
type ProtoPubKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// pub_key: the public cryptographic code that allows signature verification from a private key
	Pubkey        []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoPubKey) Reset() {
	*x = ProtoPubKey{}
	mi := &file_crypto_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoPubKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPubKey) ProtoMessage() {}

func (x *ProtoPubKey) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPubKey.ProtoReflect.Descriptor instead.
func (*ProtoPubKey) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoPubKey) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

// ProtoPrivKey is a wrapper around private key bytes enabling protobuf encoding and decoding
type ProtoPrivKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// priv_key: is a secret cryptographic key used in asymmetric encryption to sign data and prove ownership
	// of a public key
	Privkey       []byte `protobuf:"bytes,1,opt,name=privkey,proto3" json:"privkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoPrivKey) Reset() {
	*x = ProtoPrivKey{}
	mi := &file_crypto_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoPrivKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPrivKey) ProtoMessage() {}

func (x *ProtoPrivKey) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPrivKey.ProtoReflect.Descriptor instead.
func (*ProtoPrivKey) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoPrivKey) GetPrivkey() []byte {
	if x != nil {
		return x.Privkey
	}
	return nil
}

// ProtoClassGroup represents a mathematical class group with coefficients a and b
type ProtoClassGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             []byte                 `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"` // a value in ax^2 + bxy + cy^2
	B             []byte                 `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"` // b value in ax^2 + bxy + cy^2
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoClassGroup) Reset() {
	*x = ProtoClassGroup{}
	mi := &file_crypto_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoClassGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoClassGroup) ProtoMessage() {}

func (x *ProtoClassGroup) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoClassGroup.ProtoReflect.Descriptor instead.
func (*ProtoClassGroup) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoClassGroup) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *ProtoClassGroup) GetB() []byte {
	if x != nil {
		return x.B
	}
	return nil
}

// A Verifiable Delay Function is a cryptographic function that takes a set amount of time to compute, even on powerful
// hardware, and produces a result that any node may quickly verify. In Canopy it's used as a proxy for time to deter
// historical forking attacks like a 'long-range-attack'.
type VDF struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// proof: a proof of function completion given a specific seed
	Proof []byte `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	// output: the final output of the calculated 'squarings'
	Output []byte `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	// iterations: number of serial executions (proxy for time)
	Iterations    uint64 `protobuf:"varint,3,opt,name=iterations,proto3" json:"iterations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VDF) Reset() {
	*x = VDF{}
	mi := &file_crypto_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VDF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDF) ProtoMessage() {}

func (x *VDF) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDF.ProtoReflect.Descriptor instead.
func (*VDF) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{5}
}

func (x *VDF) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *VDF) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *VDF) GetIterations() uint64 {
	if x != nil {
		return x.Iterations
	}
	return 0
}

var File_crypto_proto protoreflect.FileDescriptor

const file_crypto_proto_rawDesc = "" +
	"\n" +
	"\fcrypto.proto\x12\x05types\"(\n" +
	"\fProtoAddress\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\".\n" +
	"\x0eProtoAddresses\x12\x1c\n" +
	"\taddresses\x18\x01 \x03(\fR\taddresses\"%\n" +
	"\vProtoPubKey\x12\x16\n" +
	"\x06pubkey\x18\x01 \x01(\fR\x06pubkey\"(\n" +
	"\fProtoPrivKey\x12\x18\n" +
	"\aprivkey\x18\x01 \x01(\fR\aprivkey\"-\n" +
	"\x0fProtoClassGroup\x12\f\n" +
	"\x01a\x18\x01 \x01(\fR\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\fR\x01b\"S\n" +
	"\x03VDF\x12\x14\n" +
	"\x05proof\x18\x01 \x01(\fR\x05proof\x12\x16\n" +
	"\x06output\x18\x02 \x01(\fR\x06output\x12\x1e\n" +
	"\n" +
	"iterations\x18\x03 \x01(\x04R\n" +
	"iterationsB-Z+github.com/canopy-network/canopy/lib/cryptob\x06proto3"

var (
	file_crypto_proto_rawDescOnce sync.Once
	file_crypto_proto_rawDescData []byte
)

func file_crypto_proto_rawDescGZIP() []byte {
	file_crypto_proto_rawDescOnce.Do(func() {
		file_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_crypto_proto_rawDesc), len(file_crypto_proto_rawDesc)))
	})
	return file_crypto_proto_rawDescData
}

var file_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_crypto_proto_goTypes = []any{
	(*ProtoAddress)(nil),    // 0: types.ProtoAddress
	(*ProtoAddresses)(nil),  // 1: types.ProtoAddresses
	(*ProtoPubKey)(nil),     // 2: types.ProtoPubKey
	(*ProtoPrivKey)(nil),    // 3: types.ProtoPrivKey
	(*ProtoClassGroup)(nil), // 4: types.ProtoClassGroup
	(*VDF)(nil),             // 5: types.VDF
}
var file_crypto_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_crypto_proto_init() }
func file_crypto_proto_init() {
	if File_crypto_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_crypto_proto_rawDesc), len(file_crypto_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_crypto_proto_goTypes,
		DependencyIndexes: file_crypto_proto_depIdxs,
		MessageInfos:      file_crypto_proto_msgTypes,
	}.Build()
	File_crypto_proto = out.File
	file_crypto_proto_goTypes = nil
	file_crypto_proto_depIdxs = nil
}
