syntax = "proto3";

package types;
option go_package = "github.com/canopy-network/canopy/lib";

// FSMToPluginRequest is the outbound request to the plugin from the main FSM (fsm -> plugin)
message FSMToPluginRequest {
  oneof payload {
    // genesis: request to execute genesis logic on the plugin
    PluginGenesisRequest genesis = 1;
    // begin: request to execute 'begin block' logic on the plugin
    PluginBeginRequest begin = 2;
    // deliver: request to execute 'deliver tx' logic on the plugin
    PluginDeliverRequest deliver = 3;
    // end: request to execute 'end block' logic on the plugin
    PluginEndRequest end = 4;
  }
}

// FSMToPluginResponse is the inbound response from the plugin following an FSM request (plugin -> fsm)
message FSMToPluginResponse {
  oneof payload {
    // genesis: response to the genesis request
    PluginGenesisResponse genesis = 1;
    // begin: response to the begin block request
    PluginBeginResponse begin = 2;
    // deliver: response to the deliver tx request
    PluginDeliverResponse deliver = 3;
    // end: response to the end block request
    PluginEndResponse end = 4;
    // error: any error returned by the plugin
    PluginError error = 99;
  }
}

// PluginToFSMRequest is the outbound request from the plugin to the FSM (plugin -> fsm)
message PluginToFSMRequest {
  oneof payload {
    // state_read: request to read plugin state from the FSM
    PluginStateReadRequest state_read = 1;
    // state_write: request to write plugin state to the FSM
    PluginStateWriteRequest state_write = 2;
  }
}

// PluginToFSMResponse is the inbound response from the FSM following a plugin request (fsm -> plugin)
message PluginToFSMResponse {
  oneof payload {
    // state_read: response with read state data
    PluginStateReadResponse state_read = 1;
    // state_write: acknowledgment of write operation
    PluginStateWriteResponse state_write = 2;
    // error: any error returned by the FSM
    PluginError error = 99;
  }
}

// Core block lifecycle messages

// PluginGenesisRequest carries genesis JSON data for initialization
message PluginGenesisRequest {bytes genesis_json = 1;}

// PluginGenesisResponse acknowledges genesis execution completion
message PluginGenesisResponse {}

// PluginBeginRequest signals start of a new block
message PluginBeginRequest {}

// PluginBeginResponse acknowledges begin block execution
message PluginBeginResponse {}

// PluginDeliverRequest carries a transaction to be processed
message PluginDeliverRequest {bytes tx = 1;}

// PluginDeliverResponse acknowledges transaction delivery
message PluginDeliverResponse {}

// PluginEndRequest signals end of the current block
message PluginEndRequest {}

// PluginEndResponse acknowledges end block execution
message PluginEndResponse {}

// PluginGenesisDone signals plugin has completed genesis processing
message PluginGenesisDone {}

// PluginError carries error details from plugin or FSM
message PluginError {bytes error = 1;}

// Plugin State Read Interface

// PluginStateReadRequest allows batching multiple key or range reads in one call
message PluginStateReadRequest {
  // keys: explicit keys to read
  repeated PluginKeyRead keys = 1;
  // ranges: key ranges to iterate over and read
  repeated PluginRangeRead ranges = 2;
}

// PluginKeyRead requests a single key read, identified by query_id
message PluginKeyRead {
  // query_id to correlate requests and responses
  string query_id = 1;
  // key to read from state
  string key = 2;
}

// PluginRangeRead requests an iteration over a key range with optional limits and direction
message PluginRangeRead {
  // query_id to correlate requests and responses
  string query_id = 1;
  // start key (inclusive)
  string start = 2;
  // end key (exclusive)
  string end = 3;
  // maximum number of entries to return
  uint32 limit = 4;
  // whether to iterate in reverse order
  bool reverse = 5;
}

// PluginStateReadResponse returns the results for the read requests
message PluginStateReadResponse {
  // results hold multiple query results matching requests by query_id
  repeated PluginReadResult results = 1;
}

// PluginReadResult holds the result entries for a specific read query
message PluginReadResult {
  // query_id matching the original read request
  string query_id = 1;
  // entries returned for this query
  repeated PluginStateEntry entries = 2;
}

// Plugin State Write Interface

// PluginStateWriteRequest batches multiple set and delete operations in one call
message PluginStateWriteRequest {
  // sets: keys and values to write to state
  repeated PluginSetOp sets = 1;
  // deletes: keys to remove from state
  repeated PluginDeleteOp deletes = 2;
}

// PluginStateWriteResponse acknowledges successful write operations
message PluginStateWriteResponse {}

// PluginSetOp represents a key/value pair to set in state
message PluginSetOp {
  // key: is the 'key' associated with the value in the KV pair for the set op
  string key = 1;
  // key: is the 'value' associated with the value in the KV pair for the set op
  bytes value = 2;
}

// PluginDeleteOp represents a key to delete from state
message PluginDeleteOp {
  // key: is the 'key' associated with the value in the KV pair for the delete op
  string key = 1;
}

// PluginStateEntry represents a key/value pair returned in read results
message PluginStateEntry {
  // key: is the 'key' associated with the value in the KV pair for the 'get' op
  string key = 1;
  // value: is the 'value' associated with the value in the KV pair for the 'get' op
  bytes value = 2;
}
