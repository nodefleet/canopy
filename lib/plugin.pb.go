// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.1
// source: plugin.proto

package lib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FSMToPluginRequest is the outbound request to the plugin from the main FSM (fsm -> plugin)
type FSMToPluginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*FSMToPluginRequest_Genesis
	//	*FSMToPluginRequest_Begin
	//	*FSMToPluginRequest_Deliver
	//	*FSMToPluginRequest_End
	Payload       isFSMToPluginRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FSMToPluginRequest) Reset() {
	*x = FSMToPluginRequest{}
	mi := &file_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FSMToPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSMToPluginRequest) ProtoMessage() {}

func (x *FSMToPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSMToPluginRequest.ProtoReflect.Descriptor instead.
func (*FSMToPluginRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *FSMToPluginRequest) GetPayload() isFSMToPluginRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *FSMToPluginRequest) GetGenesis() *PluginGenesisRequest {
	if x != nil {
		if x, ok := x.Payload.(*FSMToPluginRequest_Genesis); ok {
			return x.Genesis
		}
	}
	return nil
}

func (x *FSMToPluginRequest) GetBegin() *PluginBeginRequest {
	if x != nil {
		if x, ok := x.Payload.(*FSMToPluginRequest_Begin); ok {
			return x.Begin
		}
	}
	return nil
}

func (x *FSMToPluginRequest) GetDeliver() *PluginDeliverRequest {
	if x != nil {
		if x, ok := x.Payload.(*FSMToPluginRequest_Deliver); ok {
			return x.Deliver
		}
	}
	return nil
}

func (x *FSMToPluginRequest) GetEnd() *PluginEndRequest {
	if x != nil {
		if x, ok := x.Payload.(*FSMToPluginRequest_End); ok {
			return x.End
		}
	}
	return nil
}

type isFSMToPluginRequest_Payload interface {
	isFSMToPluginRequest_Payload()
}

type FSMToPluginRequest_Genesis struct {
	// genesis: request to execute genesis logic on the plugin
	Genesis *PluginGenesisRequest `protobuf:"bytes,1,opt,name=genesis,proto3,oneof"`
}

type FSMToPluginRequest_Begin struct {
	// begin: request to execute 'begin block' logic on the plugin
	Begin *PluginBeginRequest `protobuf:"bytes,2,opt,name=begin,proto3,oneof"`
}

type FSMToPluginRequest_Deliver struct {
	// deliver: request to execute 'deliver tx' logic on the plugin
	Deliver *PluginDeliverRequest `protobuf:"bytes,3,opt,name=deliver,proto3,oneof"`
}

type FSMToPluginRequest_End struct {
	// end: request to execute 'end block' logic on the plugin
	End *PluginEndRequest `protobuf:"bytes,4,opt,name=end,proto3,oneof"`
}

func (*FSMToPluginRequest_Genesis) isFSMToPluginRequest_Payload() {}

func (*FSMToPluginRequest_Begin) isFSMToPluginRequest_Payload() {}

func (*FSMToPluginRequest_Deliver) isFSMToPluginRequest_Payload() {}

func (*FSMToPluginRequest_End) isFSMToPluginRequest_Payload() {}

// FSMToPluginResponse is the inbound response from the plugin following an FSM request (plugin -> fsm)
type FSMToPluginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*FSMToPluginResponse_Genesis
	//	*FSMToPluginResponse_Begin
	//	*FSMToPluginResponse_Deliver
	//	*FSMToPluginResponse_End
	//	*FSMToPluginResponse_Error
	Payload       isFSMToPluginResponse_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FSMToPluginResponse) Reset() {
	*x = FSMToPluginResponse{}
	mi := &file_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FSMToPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSMToPluginResponse) ProtoMessage() {}

func (x *FSMToPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSMToPluginResponse.ProtoReflect.Descriptor instead.
func (*FSMToPluginResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *FSMToPluginResponse) GetPayload() isFSMToPluginResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *FSMToPluginResponse) GetGenesis() *PluginGenesisResponse {
	if x != nil {
		if x, ok := x.Payload.(*FSMToPluginResponse_Genesis); ok {
			return x.Genesis
		}
	}
	return nil
}

func (x *FSMToPluginResponse) GetBegin() *PluginBeginResponse {
	if x != nil {
		if x, ok := x.Payload.(*FSMToPluginResponse_Begin); ok {
			return x.Begin
		}
	}
	return nil
}

func (x *FSMToPluginResponse) GetDeliver() *PluginDeliverResponse {
	if x != nil {
		if x, ok := x.Payload.(*FSMToPluginResponse_Deliver); ok {
			return x.Deliver
		}
	}
	return nil
}

func (x *FSMToPluginResponse) GetEnd() *PluginEndResponse {
	if x != nil {
		if x, ok := x.Payload.(*FSMToPluginResponse_End); ok {
			return x.End
		}
	}
	return nil
}

func (x *FSMToPluginResponse) GetError() *PluginError {
	if x != nil {
		if x, ok := x.Payload.(*FSMToPluginResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isFSMToPluginResponse_Payload interface {
	isFSMToPluginResponse_Payload()
}

type FSMToPluginResponse_Genesis struct {
	// genesis: response to the genesis request
	Genesis *PluginGenesisResponse `protobuf:"bytes,1,opt,name=genesis,proto3,oneof"`
}

type FSMToPluginResponse_Begin struct {
	// begin: response to the begin block request
	Begin *PluginBeginResponse `protobuf:"bytes,2,opt,name=begin,proto3,oneof"`
}

type FSMToPluginResponse_Deliver struct {
	// deliver: response to the deliver tx request
	Deliver *PluginDeliverResponse `protobuf:"bytes,3,opt,name=deliver,proto3,oneof"`
}

type FSMToPluginResponse_End struct {
	// end: response to the end block request
	End *PluginEndResponse `protobuf:"bytes,4,opt,name=end,proto3,oneof"`
}

type FSMToPluginResponse_Error struct {
	// error: any error returned by the plugin
	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3,oneof"`
}

func (*FSMToPluginResponse_Genesis) isFSMToPluginResponse_Payload() {}

func (*FSMToPluginResponse_Begin) isFSMToPluginResponse_Payload() {}

func (*FSMToPluginResponse_Deliver) isFSMToPluginResponse_Payload() {}

func (*FSMToPluginResponse_End) isFSMToPluginResponse_Payload() {}

func (*FSMToPluginResponse_Error) isFSMToPluginResponse_Payload() {}

// PluginToFSMRequest is the outbound request from the plugin to the FSM (plugin -> fsm)
type PluginToFSMRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*PluginToFSMRequest_StateRead
	//	*PluginToFSMRequest_StateWrite
	Payload       isPluginToFSMRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginToFSMRequest) Reset() {
	*x = PluginToFSMRequest{}
	mi := &file_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginToFSMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginToFSMRequest) ProtoMessage() {}

func (x *PluginToFSMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginToFSMRequest.ProtoReflect.Descriptor instead.
func (*PluginToFSMRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *PluginToFSMRequest) GetPayload() isPluginToFSMRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PluginToFSMRequest) GetStateRead() *PluginStateReadRequest {
	if x != nil {
		if x, ok := x.Payload.(*PluginToFSMRequest_StateRead); ok {
			return x.StateRead
		}
	}
	return nil
}

func (x *PluginToFSMRequest) GetStateWrite() *PluginStateWriteRequest {
	if x != nil {
		if x, ok := x.Payload.(*PluginToFSMRequest_StateWrite); ok {
			return x.StateWrite
		}
	}
	return nil
}

type isPluginToFSMRequest_Payload interface {
	isPluginToFSMRequest_Payload()
}

type PluginToFSMRequest_StateRead struct {
	// state_read: request to read plugin state from the FSM
	StateRead *PluginStateReadRequest `protobuf:"bytes,1,opt,name=state_read,json=stateRead,proto3,oneof"`
}

type PluginToFSMRequest_StateWrite struct {
	// state_write: request to write plugin state to the FSM
	StateWrite *PluginStateWriteRequest `protobuf:"bytes,2,opt,name=state_write,json=stateWrite,proto3,oneof"`
}

func (*PluginToFSMRequest_StateRead) isPluginToFSMRequest_Payload() {}

func (*PluginToFSMRequest_StateWrite) isPluginToFSMRequest_Payload() {}

// PluginToFSMResponse is the inbound response from the FSM following a plugin request (fsm -> plugin)
type PluginToFSMResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*PluginToFSMResponse_StateRead
	//	*PluginToFSMResponse_StateWrite
	//	*PluginToFSMResponse_Error
	Payload       isPluginToFSMResponse_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginToFSMResponse) Reset() {
	*x = PluginToFSMResponse{}
	mi := &file_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginToFSMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginToFSMResponse) ProtoMessage() {}

func (x *PluginToFSMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginToFSMResponse.ProtoReflect.Descriptor instead.
func (*PluginToFSMResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *PluginToFSMResponse) GetPayload() isPluginToFSMResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PluginToFSMResponse) GetStateRead() *PluginStateReadResponse {
	if x != nil {
		if x, ok := x.Payload.(*PluginToFSMResponse_StateRead); ok {
			return x.StateRead
		}
	}
	return nil
}

func (x *PluginToFSMResponse) GetStateWrite() *PluginStateWriteResponse {
	if x != nil {
		if x, ok := x.Payload.(*PluginToFSMResponse_StateWrite); ok {
			return x.StateWrite
		}
	}
	return nil
}

func (x *PluginToFSMResponse) GetError() *PluginError {
	if x != nil {
		if x, ok := x.Payload.(*PluginToFSMResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isPluginToFSMResponse_Payload interface {
	isPluginToFSMResponse_Payload()
}

type PluginToFSMResponse_StateRead struct {
	// state_read: response with read state data
	StateRead *PluginStateReadResponse `protobuf:"bytes,1,opt,name=state_read,json=stateRead,proto3,oneof"`
}

type PluginToFSMResponse_StateWrite struct {
	// state_write: acknowledgment of write operation
	StateWrite *PluginStateWriteResponse `protobuf:"bytes,2,opt,name=state_write,json=stateWrite,proto3,oneof"`
}

type PluginToFSMResponse_Error struct {
	// error: any error returned by the FSM
	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3,oneof"`
}

func (*PluginToFSMResponse_StateRead) isPluginToFSMResponse_Payload() {}

func (*PluginToFSMResponse_StateWrite) isPluginToFSMResponse_Payload() {}

func (*PluginToFSMResponse_Error) isPluginToFSMResponse_Payload() {}

// PluginGenesisRequest carries genesis JSON data for initialization
type PluginGenesisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GenesisJson   []byte                 `protobuf:"bytes,1,opt,name=genesis_json,json=genesisJson,proto3" json:"genesis_json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginGenesisRequest) Reset() {
	*x = PluginGenesisRequest{}
	mi := &file_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginGenesisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginGenesisRequest) ProtoMessage() {}

func (x *PluginGenesisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginGenesisRequest.ProtoReflect.Descriptor instead.
func (*PluginGenesisRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *PluginGenesisRequest) GetGenesisJson() []byte {
	if x != nil {
		return x.GenesisJson
	}
	return nil
}

// PluginGenesisResponse acknowledges genesis execution completion
type PluginGenesisResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginGenesisResponse) Reset() {
	*x = PluginGenesisResponse{}
	mi := &file_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginGenesisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginGenesisResponse) ProtoMessage() {}

func (x *PluginGenesisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginGenesisResponse.ProtoReflect.Descriptor instead.
func (*PluginGenesisResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{5}
}

// PluginBeginRequest signals start of a new block
type PluginBeginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginBeginRequest) Reset() {
	*x = PluginBeginRequest{}
	mi := &file_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginBeginRequest) ProtoMessage() {}

func (x *PluginBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginBeginRequest.ProtoReflect.Descriptor instead.
func (*PluginBeginRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{6}
}

// PluginBeginResponse acknowledges begin block execution
type PluginBeginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginBeginResponse) Reset() {
	*x = PluginBeginResponse{}
	mi := &file_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginBeginResponse) ProtoMessage() {}

func (x *PluginBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginBeginResponse.ProtoReflect.Descriptor instead.
func (*PluginBeginResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{7}
}

// PluginDeliverRequest carries a transaction to be processed
type PluginDeliverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tx            []byte                 `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginDeliverRequest) Reset() {
	*x = PluginDeliverRequest{}
	mi := &file_plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginDeliverRequest) ProtoMessage() {}

func (x *PluginDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginDeliverRequest.ProtoReflect.Descriptor instead.
func (*PluginDeliverRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *PluginDeliverRequest) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

// PluginDeliverResponse acknowledges transaction delivery
type PluginDeliverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginDeliverResponse) Reset() {
	*x = PluginDeliverResponse{}
	mi := &file_plugin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginDeliverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginDeliverResponse) ProtoMessage() {}

func (x *PluginDeliverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginDeliverResponse.ProtoReflect.Descriptor instead.
func (*PluginDeliverResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{9}
}

// PluginEndRequest signals end of the current block
type PluginEndRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginEndRequest) Reset() {
	*x = PluginEndRequest{}
	mi := &file_plugin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginEndRequest) ProtoMessage() {}

func (x *PluginEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginEndRequest.ProtoReflect.Descriptor instead.
func (*PluginEndRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{10}
}

// PluginEndResponse acknowledges end block execution
type PluginEndResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginEndResponse) Reset() {
	*x = PluginEndResponse{}
	mi := &file_plugin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginEndResponse) ProtoMessage() {}

func (x *PluginEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginEndResponse.ProtoReflect.Descriptor instead.
func (*PluginEndResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{11}
}

// PluginGenesisDone signals plugin has completed genesis processing
type PluginGenesisDone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginGenesisDone) Reset() {
	*x = PluginGenesisDone{}
	mi := &file_plugin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginGenesisDone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginGenesisDone) ProtoMessage() {}

func (x *PluginGenesisDone) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginGenesisDone.ProtoReflect.Descriptor instead.
func (*PluginGenesisDone) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{12}
}

// PluginError carries error details from plugin or FSM
type PluginError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         []byte                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginError) Reset() {
	*x = PluginError{}
	mi := &file_plugin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginError) ProtoMessage() {}

func (x *PluginError) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginError.ProtoReflect.Descriptor instead.
func (*PluginError) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *PluginError) GetError() []byte {
	if x != nil {
		return x.Error
	}
	return nil
}

// PluginStateReadRequest allows batching multiple key or range reads in one call
type PluginStateReadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// keys: explicit keys to read
	Keys []*PluginKeyRead `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	// ranges: key ranges to iterate over and read
	Ranges        []*PluginRangeRead `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginStateReadRequest) Reset() {
	*x = PluginStateReadRequest{}
	mi := &file_plugin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginStateReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateReadRequest) ProtoMessage() {}

func (x *PluginStateReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateReadRequest.ProtoReflect.Descriptor instead.
func (*PluginStateReadRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *PluginStateReadRequest) GetKeys() []*PluginKeyRead {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *PluginStateReadRequest) GetRanges() []*PluginRangeRead {
	if x != nil {
		return x.Ranges
	}
	return nil
}

// PluginKeyRead requests a single key read, identified by query_id
type PluginKeyRead struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// query_id to correlate requests and responses
	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// key to read from state
	Key           string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginKeyRead) Reset() {
	*x = PluginKeyRead{}
	mi := &file_plugin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginKeyRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginKeyRead) ProtoMessage() {}

func (x *PluginKeyRead) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginKeyRead.ProtoReflect.Descriptor instead.
func (*PluginKeyRead) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *PluginKeyRead) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *PluginKeyRead) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// PluginRangeRead requests an iteration over a key range with optional limits and direction
type PluginRangeRead struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// query_id to correlate requests and responses
	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// start key (inclusive)
	Start string `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// end key (exclusive)
	End string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	// maximum number of entries to return
	Limit uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// whether to iterate in reverse order
	Reverse       bool `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginRangeRead) Reset() {
	*x = PluginRangeRead{}
	mi := &file_plugin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginRangeRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRangeRead) ProtoMessage() {}

func (x *PluginRangeRead) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRangeRead.ProtoReflect.Descriptor instead.
func (*PluginRangeRead) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{16}
}

func (x *PluginRangeRead) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *PluginRangeRead) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *PluginRangeRead) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *PluginRangeRead) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PluginRangeRead) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

// PluginStateReadResponse returns the results for the read requests
type PluginStateReadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// results hold multiple query results matching requests by query_id
	Results       []*PluginReadResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginStateReadResponse) Reset() {
	*x = PluginStateReadResponse{}
	mi := &file_plugin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginStateReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateReadResponse) ProtoMessage() {}

func (x *PluginStateReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateReadResponse.ProtoReflect.Descriptor instead.
func (*PluginStateReadResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{17}
}

func (x *PluginStateReadResponse) GetResults() []*PluginReadResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// PluginReadResult holds the result entries for a specific read query
type PluginReadResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// query_id matching the original read request
	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// entries returned for this query
	Entries       []*PluginStateEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginReadResult) Reset() {
	*x = PluginReadResult{}
	mi := &file_plugin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginReadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginReadResult) ProtoMessage() {}

func (x *PluginReadResult) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginReadResult.ProtoReflect.Descriptor instead.
func (*PluginReadResult) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{18}
}

func (x *PluginReadResult) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *PluginReadResult) GetEntries() []*PluginStateEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// PluginStateWriteRequest batches multiple set and delete operations in one call
type PluginStateWriteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sets: keys and values to write to state
	Sets []*PluginSetOp `protobuf:"bytes,1,rep,name=sets,proto3" json:"sets,omitempty"`
	// deletes: keys to remove from state
	Deletes       []*PluginDeleteOp `protobuf:"bytes,2,rep,name=deletes,proto3" json:"deletes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginStateWriteRequest) Reset() {
	*x = PluginStateWriteRequest{}
	mi := &file_plugin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginStateWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateWriteRequest) ProtoMessage() {}

func (x *PluginStateWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateWriteRequest.ProtoReflect.Descriptor instead.
func (*PluginStateWriteRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{19}
}

func (x *PluginStateWriteRequest) GetSets() []*PluginSetOp {
	if x != nil {
		return x.Sets
	}
	return nil
}

func (x *PluginStateWriteRequest) GetDeletes() []*PluginDeleteOp {
	if x != nil {
		return x.Deletes
	}
	return nil
}

// PluginStateWriteResponse acknowledges successful write operations
type PluginStateWriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginStateWriteResponse) Reset() {
	*x = PluginStateWriteResponse{}
	mi := &file_plugin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginStateWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateWriteResponse) ProtoMessage() {}

func (x *PluginStateWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateWriteResponse.ProtoReflect.Descriptor instead.
func (*PluginStateWriteResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{20}
}

// PluginSetOp represents a key/value pair to set in state
type PluginSetOp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// key: is the 'key' associated with the value in the KV pair for the set op
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// key: is the 'value' associated with the value in the KV pair for the set op
	Value         []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginSetOp) Reset() {
	*x = PluginSetOp{}
	mi := &file_plugin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginSetOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSetOp) ProtoMessage() {}

func (x *PluginSetOp) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSetOp.ProtoReflect.Descriptor instead.
func (*PluginSetOp) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{21}
}

func (x *PluginSetOp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PluginSetOp) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// PluginDeleteOp represents a key to delete from state
type PluginDeleteOp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// key: is the 'key' associated with the value in the KV pair for the delete op
	Key           string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginDeleteOp) Reset() {
	*x = PluginDeleteOp{}
	mi := &file_plugin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginDeleteOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginDeleteOp) ProtoMessage() {}

func (x *PluginDeleteOp) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginDeleteOp.ProtoReflect.Descriptor instead.
func (*PluginDeleteOp) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{22}
}

func (x *PluginDeleteOp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// PluginStateEntry represents a key/value pair returned in read results
type PluginStateEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// key: is the 'key' associated with the value in the KV pair for the 'get' op
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// value: is the 'value' associated with the value in the KV pair for the 'get' op
	Value         []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginStateEntry) Reset() {
	*x = PluginStateEntry{}
	mi := &file_plugin_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateEntry) ProtoMessage() {}

func (x *PluginStateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateEntry.ProtoReflect.Descriptor instead.
func (*PluginStateEntry) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{23}
}

func (x *PluginStateEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PluginStateEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_plugin_proto protoreflect.FileDescriptor

const file_plugin_proto_rawDesc = "" +
	"\n" +
	"\fplugin.proto\x12\x05types\"\xf1\x01\n" +
	"\x12FSMToPluginRequest\x127\n" +
	"\agenesis\x18\x01 \x01(\v2\x1b.types.PluginGenesisRequestH\x00R\agenesis\x121\n" +
	"\x05begin\x18\x02 \x01(\v2\x19.types.PluginBeginRequestH\x00R\x05begin\x127\n" +
	"\adeliver\x18\x03 \x01(\v2\x1b.types.PluginDeliverRequestH\x00R\adeliver\x12+\n" +
	"\x03end\x18\x04 \x01(\v2\x17.types.PluginEndRequestH\x00R\x03endB\t\n" +
	"\apayload\"\xa2\x02\n" +
	"\x13FSMToPluginResponse\x128\n" +
	"\agenesis\x18\x01 \x01(\v2\x1c.types.PluginGenesisResponseH\x00R\agenesis\x122\n" +
	"\x05begin\x18\x02 \x01(\v2\x1a.types.PluginBeginResponseH\x00R\x05begin\x128\n" +
	"\adeliver\x18\x03 \x01(\v2\x1c.types.PluginDeliverResponseH\x00R\adeliver\x12,\n" +
	"\x03end\x18\x04 \x01(\v2\x18.types.PluginEndResponseH\x00R\x03end\x12*\n" +
	"\x05error\x18c \x01(\v2\x12.types.PluginErrorH\x00R\x05errorB\t\n" +
	"\apayload\"\xa2\x01\n" +
	"\x12PluginToFSMRequest\x12>\n" +
	"\n" +
	"state_read\x18\x01 \x01(\v2\x1d.types.PluginStateReadRequestH\x00R\tstateRead\x12A\n" +
	"\vstate_write\x18\x02 \x01(\v2\x1e.types.PluginStateWriteRequestH\x00R\n" +
	"stateWriteB\t\n" +
	"\apayload\"\xd1\x01\n" +
	"\x13PluginToFSMResponse\x12?\n" +
	"\n" +
	"state_read\x18\x01 \x01(\v2\x1e.types.PluginStateReadResponseH\x00R\tstateRead\x12B\n" +
	"\vstate_write\x18\x02 \x01(\v2\x1f.types.PluginStateWriteResponseH\x00R\n" +
	"stateWrite\x12*\n" +
	"\x05error\x18c \x01(\v2\x12.types.PluginErrorH\x00R\x05errorB\t\n" +
	"\apayload\"9\n" +
	"\x14PluginGenesisRequest\x12!\n" +
	"\fgenesis_json\x18\x01 \x01(\fR\vgenesisJson\"\x17\n" +
	"\x15PluginGenesisResponse\"\x14\n" +
	"\x12PluginBeginRequest\"\x15\n" +
	"\x13PluginBeginResponse\"&\n" +
	"\x14PluginDeliverRequest\x12\x0e\n" +
	"\x02tx\x18\x01 \x01(\fR\x02tx\"\x17\n" +
	"\x15PluginDeliverResponse\"\x12\n" +
	"\x10PluginEndRequest\"\x13\n" +
	"\x11PluginEndResponse\"\x13\n" +
	"\x11PluginGenesisDone\"#\n" +
	"\vPluginError\x12\x14\n" +
	"\x05error\x18\x01 \x01(\fR\x05error\"r\n" +
	"\x16PluginStateReadRequest\x12(\n" +
	"\x04keys\x18\x01 \x03(\v2\x14.types.PluginKeyReadR\x04keys\x12.\n" +
	"\x06ranges\x18\x02 \x03(\v2\x16.types.PluginRangeReadR\x06ranges\"<\n" +
	"\rPluginKeyRead\x12\x19\n" +
	"\bquery_id\x18\x01 \x01(\tR\aqueryId\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\"\x84\x01\n" +
	"\x0fPluginRangeRead\x12\x19\n" +
	"\bquery_id\x18\x01 \x01(\tR\aqueryId\x12\x14\n" +
	"\x05start\x18\x02 \x01(\tR\x05start\x12\x10\n" +
	"\x03end\x18\x03 \x01(\tR\x03end\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\rR\x05limit\x12\x18\n" +
	"\areverse\x18\x05 \x01(\bR\areverse\"L\n" +
	"\x17PluginStateReadResponse\x121\n" +
	"\aresults\x18\x01 \x03(\v2\x17.types.PluginReadResultR\aresults\"`\n" +
	"\x10PluginReadResult\x12\x19\n" +
	"\bquery_id\x18\x01 \x01(\tR\aqueryId\x121\n" +
	"\aentries\x18\x02 \x03(\v2\x17.types.PluginStateEntryR\aentries\"r\n" +
	"\x17PluginStateWriteRequest\x12&\n" +
	"\x04sets\x18\x01 \x03(\v2\x12.types.PluginSetOpR\x04sets\x12/\n" +
	"\adeletes\x18\x02 \x03(\v2\x15.types.PluginDeleteOpR\adeletes\"\x1a\n" +
	"\x18PluginStateWriteResponse\"5\n" +
	"\vPluginSetOp\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\"\"\n" +
	"\x0ePluginDeleteOp\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\":\n" +
	"\x10PluginStateEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05valueB&Z$github.com/canopy-network/canopy/libb\x06proto3"

var (
	file_plugin_proto_rawDescOnce sync.Once
	file_plugin_proto_rawDescData []byte
)

func file_plugin_proto_rawDescGZIP() []byte {
	file_plugin_proto_rawDescOnce.Do(func() {
		file_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugin_proto_rawDesc), len(file_plugin_proto_rawDesc)))
	})
	return file_plugin_proto_rawDescData
}

var file_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_plugin_proto_goTypes = []any{
	(*FSMToPluginRequest)(nil),       // 0: types.FSMToPluginRequest
	(*FSMToPluginResponse)(nil),      // 1: types.FSMToPluginResponse
	(*PluginToFSMRequest)(nil),       // 2: types.PluginToFSMRequest
	(*PluginToFSMResponse)(nil),      // 3: types.PluginToFSMResponse
	(*PluginGenesisRequest)(nil),     // 4: types.PluginGenesisRequest
	(*PluginGenesisResponse)(nil),    // 5: types.PluginGenesisResponse
	(*PluginBeginRequest)(nil),       // 6: types.PluginBeginRequest
	(*PluginBeginResponse)(nil),      // 7: types.PluginBeginResponse
	(*PluginDeliverRequest)(nil),     // 8: types.PluginDeliverRequest
	(*PluginDeliverResponse)(nil),    // 9: types.PluginDeliverResponse
	(*PluginEndRequest)(nil),         // 10: types.PluginEndRequest
	(*PluginEndResponse)(nil),        // 11: types.PluginEndResponse
	(*PluginGenesisDone)(nil),        // 12: types.PluginGenesisDone
	(*PluginError)(nil),              // 13: types.PluginError
	(*PluginStateReadRequest)(nil),   // 14: types.PluginStateReadRequest
	(*PluginKeyRead)(nil),            // 15: types.PluginKeyRead
	(*PluginRangeRead)(nil),          // 16: types.PluginRangeRead
	(*PluginStateReadResponse)(nil),  // 17: types.PluginStateReadResponse
	(*PluginReadResult)(nil),         // 18: types.PluginReadResult
	(*PluginStateWriteRequest)(nil),  // 19: types.PluginStateWriteRequest
	(*PluginStateWriteResponse)(nil), // 20: types.PluginStateWriteResponse
	(*PluginSetOp)(nil),              // 21: types.PluginSetOp
	(*PluginDeleteOp)(nil),           // 22: types.PluginDeleteOp
	(*PluginStateEntry)(nil),         // 23: types.PluginStateEntry
}
var file_plugin_proto_depIdxs = []int32{
	4,  // 0: types.FSMToPluginRequest.genesis:type_name -> types.PluginGenesisRequest
	6,  // 1: types.FSMToPluginRequest.begin:type_name -> types.PluginBeginRequest
	8,  // 2: types.FSMToPluginRequest.deliver:type_name -> types.PluginDeliverRequest
	10, // 3: types.FSMToPluginRequest.end:type_name -> types.PluginEndRequest
	5,  // 4: types.FSMToPluginResponse.genesis:type_name -> types.PluginGenesisResponse
	7,  // 5: types.FSMToPluginResponse.begin:type_name -> types.PluginBeginResponse
	9,  // 6: types.FSMToPluginResponse.deliver:type_name -> types.PluginDeliverResponse
	11, // 7: types.FSMToPluginResponse.end:type_name -> types.PluginEndResponse
	13, // 8: types.FSMToPluginResponse.error:type_name -> types.PluginError
	14, // 9: types.PluginToFSMRequest.state_read:type_name -> types.PluginStateReadRequest
	19, // 10: types.PluginToFSMRequest.state_write:type_name -> types.PluginStateWriteRequest
	17, // 11: types.PluginToFSMResponse.state_read:type_name -> types.PluginStateReadResponse
	20, // 12: types.PluginToFSMResponse.state_write:type_name -> types.PluginStateWriteResponse
	13, // 13: types.PluginToFSMResponse.error:type_name -> types.PluginError
	15, // 14: types.PluginStateReadRequest.keys:type_name -> types.PluginKeyRead
	16, // 15: types.PluginStateReadRequest.ranges:type_name -> types.PluginRangeRead
	18, // 16: types.PluginStateReadResponse.results:type_name -> types.PluginReadResult
	23, // 17: types.PluginReadResult.entries:type_name -> types.PluginStateEntry
	21, // 18: types.PluginStateWriteRequest.sets:type_name -> types.PluginSetOp
	22, // 19: types.PluginStateWriteRequest.deletes:type_name -> types.PluginDeleteOp
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_plugin_proto_init() }
func file_plugin_proto_init() {
	if File_plugin_proto != nil {
		return
	}
	file_plugin_proto_msgTypes[0].OneofWrappers = []any{
		(*FSMToPluginRequest_Genesis)(nil),
		(*FSMToPluginRequest_Begin)(nil),
		(*FSMToPluginRequest_Deliver)(nil),
		(*FSMToPluginRequest_End)(nil),
	}
	file_plugin_proto_msgTypes[1].OneofWrappers = []any{
		(*FSMToPluginResponse_Genesis)(nil),
		(*FSMToPluginResponse_Begin)(nil),
		(*FSMToPluginResponse_Deliver)(nil),
		(*FSMToPluginResponse_End)(nil),
		(*FSMToPluginResponse_Error)(nil),
	}
	file_plugin_proto_msgTypes[2].OneofWrappers = []any{
		(*PluginToFSMRequest_StateRead)(nil),
		(*PluginToFSMRequest_StateWrite)(nil),
	}
	file_plugin_proto_msgTypes[3].OneofWrappers = []any{
		(*PluginToFSMResponse_StateRead)(nil),
		(*PluginToFSMResponse_StateWrite)(nil),
		(*PluginToFSMResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugin_proto_rawDesc), len(file_plugin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugin_proto_goTypes,
		DependencyIndexes: file_plugin_proto_depIdxs,
		MessageInfos:      file_plugin_proto_msgTypes,
	}.Build()
	File_plugin_proto = out.File
	file_plugin_proto_goTypes = nil
	file_plugin_proto_depIdxs = nil
}
