// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: wrapper.proto

package lib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *****************************************************************************************************
// This file is auto-generated from source files in `/lib/.proto/*` using Protocol Buffers (protobuf)
//
// Protobuf is a language-neutral, platform-neutral serialization format. It allows users
// to define objects in a way thatâ€™s both efficient to store and fast to transmit over the network.
// These definitions are compiled into code that *enables different systems and programming languages
// to communicate in a byte-perfect manner*
//
// To update these structures, make changes to the source .proto files, then recompile
// to regenerate this file.
// These auto-generated files are easily recognized by checking for a `.pb.go` ending
// *****************************************************************************************************
// _
// _
// _
//
// StringWrapper is a protobuf wrapper around a string primitive
type StringWrapper struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// value: the underlying string value
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringWrapper) Reset() {
	*x = StringWrapper{}
	mi := &file_wrapper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringWrapper) ProtoMessage() {}

func (x *StringWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_wrapper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringWrapper.ProtoReflect.Descriptor instead.
func (*StringWrapper) Descriptor() ([]byte, []int) {
	return file_wrapper_proto_rawDescGZIP(), []int{0}
}

func (x *StringWrapper) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// UInt64Wrapper is a protobuf wrapper around a string primitive
type UInt64Wrapper struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// value: the underlying uint64 value
	Value         uint64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UInt64Wrapper) Reset() {
	*x = UInt64Wrapper{}
	mi := &file_wrapper_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UInt64Wrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt64Wrapper) ProtoMessage() {}

func (x *UInt64Wrapper) ProtoReflect() protoreflect.Message {
	mi := &file_wrapper_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt64Wrapper.ProtoReflect.Descriptor instead.
func (*UInt64Wrapper) Descriptor() ([]byte, []int) {
	return file_wrapper_proto_rawDescGZIP(), []int{1}
}

func (x *UInt64Wrapper) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_wrapper_proto protoreflect.FileDescriptor

const file_wrapper_proto_rawDesc = "" +
	"\n" +
	"\rwrapper.proto\x12\x05types\"%\n" +
	"\rStringWrapper\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"%\n" +
	"\rUInt64Wrapper\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x04R\x05valueB&Z$github.com/canopy-network/canopy/libb\x06proto3"

var (
	file_wrapper_proto_rawDescOnce sync.Once
	file_wrapper_proto_rawDescData []byte
)

func file_wrapper_proto_rawDescGZIP() []byte {
	file_wrapper_proto_rawDescOnce.Do(func() {
		file_wrapper_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wrapper_proto_rawDesc), len(file_wrapper_proto_rawDesc)))
	})
	return file_wrapper_proto_rawDescData
}

var file_wrapper_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wrapper_proto_goTypes = []any{
	(*StringWrapper)(nil), // 0: types.StringWrapper
	(*UInt64Wrapper)(nil), // 1: types.UInt64Wrapper
}
var file_wrapper_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wrapper_proto_init() }
func file_wrapper_proto_init() {
	if File_wrapper_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wrapper_proto_rawDesc), len(file_wrapper_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wrapper_proto_goTypes,
		DependencyIndexes: file_wrapper_proto_depIdxs,
		MessageInfos:      file_wrapper_proto_msgTypes,
	}.Build()
	File_wrapper_proto = out.File
	file_wrapper_proto_goTypes = nil
	file_wrapper_proto_depIdxs = nil
}
