// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: tx.proto

package lib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *****************************************************************************************************
// This file is auto-generated from source files in `/lib/.proto/*` using Protocol Buffers (protobuf)
//
// Protobuf is a language-neutral, platform-neutral serialization format. It allows users
// to define objects in a way thatâ€™s both efficient to store and fast to transmit over the network.
// These definitions are compiled into code that *enables different systems and programming languages
// to communicate in a byte-perfect manner*
//
// To update these structures, make changes to the source .proto files, then recompile
// to regenerate this file.
// These auto-generated files are easily recognized by checking for a `.pb.go` ending
// *****************************************************************************************************
// _
// _
// _
// Transaction represents a request or action submitted to the network like transfer assets or perform other operations
// within the blockchain system
type Transaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// message_type: The type of the transaction like 'send' or 'stake'
	MessageType string `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"messageType"` // @gotags: json:"messageType"
	// msg: The actual transaction message payload, which is encapsulated in a generic message format
	Msg *anypb.Any `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// signature: The cryptographic signature used to verify the authenticity of the transaction
	Signature *Signature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	// created_height: The height when the transaction was created - allows 'safe pruning'
	CreatedHeight uint64 `protobuf:"varint,4,opt,name=created_height,json=createdHeight,proto3" json:"createdHeight"` // @gotags: json:"createdHeight"
	// time: The timestamp when the transaction was created - used as temporal entropy to prevent hash collisions in txs
	Time uint64 `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	// fee: The fee associated with processing the transaction
	Fee uint64 `protobuf:"varint,6,opt,name=fee,proto3" json:"fee,omitempty"`
	// memo: An optional message or note attached to the transaction
	Memo string `protobuf:"bytes,7,opt,name=memo,proto3" json:"memo,omitempty"`
	// network_id: The identity of the network the transaction is intended for
	NetworkId uint64 `protobuf:"varint,8,opt,name=network_id,json=networkId,proto3" json:"networkID"` // @gotags: json:"networkID"
	// chain_id: The identity of the committee the transaction is intended for
	ChainId       uint64 `protobuf:"varint,9,opt,name=chain_id,json=chainId,proto3" json:"chainID"` // @gotags: json:"chainID"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_tx_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_tx_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_tx_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *Transaction) GetMsg() *anypb.Any {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Transaction) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction) GetCreatedHeight() uint64 {
	if x != nil {
		return x.CreatedHeight
	}
	return 0
}

func (x *Transaction) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Transaction) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Transaction) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Transaction) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *Transaction) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

// TxResult represents the result of a processed transaction, including information about the sender, recipient,
// transaction hash, and the associated block height and index.
type TxResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sender: The address of the user sending the transaction
	Sender []byte `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// recipient: The address of the user receiving the transaction
	Recipient []byte `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// message_type: The type of the transaction like 'send' or 'stake'
	MessageType string `protobuf:"bytes,3,opt,name=message_type,json=messageType,proto3" json:"messageType"` // @gotags: json:"messageType"
	// height: The block height at which the transaction was included
	Height uint64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// index: The position of the transaction within the block
	Index uint64 `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	// transaction: The original transaction object
	Transaction *Transaction `protobuf:"bytes,6,opt,name=transaction,proto3" json:"transaction,omitempty"`
	// tx_hash: The unique hash that identifies the transaction
	TxHash        string `protobuf:"bytes,7,opt,name=tx_hash,json=txHash,proto3" json:"txHash"` // @gotags: json:"txHash"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxResult) Reset() {
	*x = TxResult{}
	mi := &file_tx_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxResult) ProtoMessage() {}

func (x *TxResult) ProtoReflect() protoreflect.Message {
	mi := &file_tx_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxResult.ProtoReflect.Descriptor instead.
func (*TxResult) Descriptor() ([]byte, []int) {
	return file_tx_proto_rawDescGZIP(), []int{1}
}

func (x *TxResult) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *TxResult) GetRecipient() []byte {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *TxResult) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *TxResult) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TxResult) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TxResult) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TxResult) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

// A Signature is a digital signature is a cryptographic "fingerprint" created with a private key,
// allowing others to verify the authenticity and integrity of a message using the corresponding public key
type Signature struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// public_key: is a cryptographic code shared openly, used to verify digital signatures
	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"publicKey"` // @gotags: json:"publicKey"
	// signature: the bytes of the signature output from a private key which may be verified with the message and public
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signature) Reset() {
	*x = Signature{}
	mi := &file_tx_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_tx_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_tx_proto_rawDescGZIP(), []int{2}
}

func (x *Signature) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Signature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_tx_proto protoreflect.FileDescriptor

const file_tx_proto_rawDesc = "" +
	"\n" +
	"\btx.proto\x12\x05types\x1a\x19google/protobuf/any.proto\"\xa3\x02\n" +
	"\vTransaction\x12!\n" +
	"\fmessage_type\x18\x01 \x01(\tR\vmessageType\x12&\n" +
	"\x03msg\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x03msg\x12.\n" +
	"\tsignature\x18\x03 \x01(\v2\x10.types.SignatureR\tsignature\x12%\n" +
	"\x0ecreated_height\x18\x04 \x01(\x04R\rcreatedHeight\x12\x12\n" +
	"\x04time\x18\x05 \x01(\x04R\x04time\x12\x10\n" +
	"\x03fee\x18\x06 \x01(\x04R\x03fee\x12\x12\n" +
	"\x04memo\x18\a \x01(\tR\x04memo\x12\x1d\n" +
	"\n" +
	"network_id\x18\b \x01(\x04R\tnetworkId\x12\x19\n" +
	"\bchain_id\x18\t \x01(\x04R\achainId\"\xe0\x01\n" +
	"\bTxResult\x12\x16\n" +
	"\x06sender\x18\x01 \x01(\fR\x06sender\x12\x1c\n" +
	"\trecipient\x18\x02 \x01(\fR\trecipient\x12!\n" +
	"\fmessage_type\x18\x03 \x01(\tR\vmessageType\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x04R\x06height\x12\x14\n" +
	"\x05index\x18\x05 \x01(\x04R\x05index\x124\n" +
	"\vtransaction\x18\x06 \x01(\v2\x12.types.TransactionR\vtransaction\x12\x17\n" +
	"\atx_hash\x18\a \x01(\tR\x06txHash\"H\n" +
	"\tSignature\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\fR\tpublicKey\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignatureB&Z$github.com/canopy-network/canopy/libb\x06proto3"

var (
	file_tx_proto_rawDescOnce sync.Once
	file_tx_proto_rawDescData []byte
)

func file_tx_proto_rawDescGZIP() []byte {
	file_tx_proto_rawDescOnce.Do(func() {
		file_tx_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tx_proto_rawDesc), len(file_tx_proto_rawDesc)))
	})
	return file_tx_proto_rawDescData
}

var file_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tx_proto_goTypes = []any{
	(*Transaction)(nil), // 0: types.Transaction
	(*TxResult)(nil),    // 1: types.TxResult
	(*Signature)(nil),   // 2: types.Signature
	(*anypb.Any)(nil),   // 3: google.protobuf.Any
}
var file_tx_proto_depIdxs = []int32{
	3, // 0: types.Transaction.msg:type_name -> google.protobuf.Any
	2, // 1: types.Transaction.signature:type_name -> types.Signature
	0, // 2: types.TxResult.transaction:type_name -> types.Transaction
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tx_proto_init() }
func file_tx_proto_init() {
	if File_tx_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tx_proto_rawDesc), len(file_tx_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tx_proto_goTypes,
		DependencyIndexes: file_tx_proto_depIdxs,
		MessageInfos:      file_tx_proto_msgTypes,
	}.Build()
	File_tx_proto = out.File
	file_tx_proto_goTypes = nil
	file_tx_proto_depIdxs = nil
}
